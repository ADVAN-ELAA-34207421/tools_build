apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

configurations {
    gradleApi
    compile.extendsFrom gradleApi
    gradleApi.extendsFrom groovy
}

dependencies {
    gradleApi gradleApi()
    groovy localGroovy()
    compile project(':builder')
}

def getVersion() {
    if (project.has("release")) {
        return project.ext.baseVersion
    }

    return project.ext.baseVersion + '-SNAPSHOT'
}

version = getVersion()
archivesBaseName = 'gradle'


uploadArchives {
    repositories {
        mavenDeployer {
            //beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

            //repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            //    authentication(userName: sonatypeUsername, password: sonatypePassword)
            //}
            repository(url: uri("$rootDir/repo"))

            pom.project {
                name 'Gradle Plug-in for Android'
                description 'Gradle plug-in to build Android applications.'
                url 'http://tools.android.com'
                inceptionYear '2007'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                scm {
                    url "https://android.googlesource.com/platform/tools/build"
                    connection "git://android.googlesource.com/platform/tools/build.git"
                }
            }
        }
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}
 
task javadocJar(type: Jar, dependsOn:groovydoc) {
     classifier = 'javadoc'
     from groovydoc.destinationDir
}
 
// add javadoc/source jar tasks as artifacts
artifacts {
     archives jar
     archives sourcesJar
     archives javadocJar
}

signing {
    sign configurations.archives
}
